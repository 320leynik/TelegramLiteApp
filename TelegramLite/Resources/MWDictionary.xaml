<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity">
    <Style TargetType="{x:Type Border}" x:Key="MSCBorderStyle">
        <Setter Property="Background" Value="#17212B"/>
    </Style>
    <Style x:Key="GridSplitterStyle" TargetType="{x:Type GridSplitter}">
        <Setter Property="Background" Value="#0A121B"/>
    </Style>

    <Style x:Key="UserPhotoButton"
           TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="24,24,24,24"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse Width="42" Height="42" DataContext="{Binding User}">
                            <Ellipse.Fill>
                                <ImageBrush ImageSource="{Binding ImageSource}" Stretch="Fill"/>
                            </Ellipse.Fill>
                        </Ellipse>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="MaterialDesignIconButtonMine"
         TargetType="{x:Type ButtonBase}"
         BasedOn="{StaticResource MaterialDesignFlatButton}">
        <Setter Property="Height" Value="48" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <ControlTemplate.Resources>
                        <Style TargetType="wpf:PackIcon">
                            <Setter Property="Height" Value="24" />
                            <Setter Property="Width" Value="24" />
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Rectangle x:Name="border"
                     Fill="{TemplateBinding Background}"
                     RenderTransformOrigin="0.5, 0.5">
                            <Rectangle.RenderTransform>
                                <ScaleTransform x:Name="CheckedEllipseScale" CenterX="0.5" CenterY="0.5" ScaleX="1.0" ScaleY="1.0" />
                            </Rectangle.RenderTransform>
                        </Rectangle>
                        <Rectangle x:Name="overlay"
                     Fill="{TemplateBinding Foreground}"
                     Opacity=".16"
                     Visibility="Hidden" />
                        <wpf:Ripple Padding="{TemplateBinding Padding}"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        Clip="{Binding ElementName=GeometryEllipse, Path=RenderedGeometry}"
                        ClipToBounds="True"
                        Content="{TemplateBinding Content}"
                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        Focusable="False"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Rectangle x:Name="GeometryEllipse"
                     Fill="Transparent"
                     Focusable="False"
                     IsHitTestVisible="False" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.38" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="48" />
    </Style>

    <Style x:Key="MaterialDesignIconForegroundButtonMine"
         TargetType="{x:Type ButtonBase}"
         BasedOn="{StaticResource MaterialDesignIconButtonMine}">
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}" />
        <Setter Property="wpf:RippleAssist.Feedback" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}" />
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="SearchStyle">
        <Setter Property="Text" Value="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        <Setter Property="Cursor" Value="IBeam"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Margin" Value="0,11,11,11"/>
        <Setter Property="Foreground" Value="#F5F5F5"/>
        <Setter Property="CaretBrush" Value="White"/>
        <Setter Property="FontFamily" Value="Fonts/OpenSans/#Open Sans"/>
        <Setter Property="Tag" Value="Search for new contacts"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border x:Name="border" CornerRadius="1" BorderThickness="0" Background="#242F3D"/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="32"/>
                            </Grid.ColumnDefinitions>
                            <ScrollViewer Grid.Column="0" Name="PART_ContentHost" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="6,0,0,0"/>
                            <Button x:Name="Search" HorizontalAlignment="Right" Width="32" Height="32" Margin="0,0,-32,0"
                                    wpf:RippleAssist.Feedback="#47526B"
                                    Command="{Binding SearchNewContactCommand}">
                                <wpf:PackIcon x:Name="IconSearch" Height="20" Width="20">
                                    <wpf:PackIcon.Style>
                                        <Style TargetType="wpf:PackIcon">
                                            <Setter Property="Kind" Value="ArrowRight"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsSearching}" Value="True">
                                                    <Setter Property="Kind" Value="Close"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </wpf:PackIcon.Style>
                                </wpf:PackIcon>
                                <Button.Style>
                                    <Style BasedOn="{StaticResource MaterialDesignIconForegroundButtonMine}" TargetType="Button">
                                        <Setter Property="Foreground" Value="#6D7883"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseCaptured" Value="True">
                                                <Setter Property="Foreground" Value="#FFFFFF"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Grid>
                        
                        <TextBlock x:Name="Hint" Text="{TemplateBinding Tag}" FontFamily="Fonts/OpenSans/#Open Sans" Foreground="#6D7883" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="9,0,0,0" Visibility="Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="Hint" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="MenuButton">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0"
                            Background="Transparent">
                            <ContentPresenter x:Name="contentPresenter"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <wpf:Ripple Padding="{TemplateBinding Padding}"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        Content="{TemplateBinding Content}"
                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        Focusable="False"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <wpf:Ripple.Clip>
                                <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                    <Binding ElementName="border" Path="ActualWidth" />
                                    <Binding ElementName="border" Path="ActualHeight" />
                                    <Binding ElementName="border" Path="CornerRadius" />
                                    <Binding ElementName="border" Path="BorderThickness" />
                                </MultiBinding>
                            </wpf:Ripple.Clip>
                        </wpf:Ripple>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
    <Color x:Key="DisabledControlDarkColor">Transparent</Color>
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation"
          Value="None" />
        <Setter Property="FocusVisualStyle"
          Value="{x:Null}" />
        <Setter Property="MinWidth"
          Value="120" />
        <Setter Property="MinHeight"
          Value="20" />
        <Setter Property="AllowDrop"
          Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border Name="Border"
                            CornerRadius="10"
                            Padding="12,8,12,0"
                            BorderThickness="0">
                        <Border.Background>
                            <SolidColorBrush Color="#182533" />
                        </Border.Background>
                        <Border.BorderBrush>
                            <SolidColorBrush Color="#182533" />
                        </Border.BorderBrush>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledControlLightColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledControlDarkColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ScrollViewer Margin="0"
                        x:Name="PART_ContentHost" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type ListViewItem}" x:Key="ContactItem">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="wpf:RippleAssist.Feedback">
                    <Setter.Value>
                        <SolidColorBrush Color="#FF496886" Opacity="1"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="wpf:RippleAssist.Feedback" Value="#25313D"/>
        <Setter Property="wpf:RippleAssist.RippleOnTop" Value="False"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Grid>
                        <Border x:Name="border" Height="62" Panel.ZIndex="1">

                        </Border>
                        <Grid  IsHitTestVisible="false" x:Name="GridContent" Background="Transparent" Panel.ZIndex="3" Height="62">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="55" MaxWidth="55"/>
                                <ColumnDefinition Width="4*"/>
                            </Grid.ColumnDefinitions>
                            <Ellipse
                                         Grid.Column="0" 
                                        Width="46" Height="46" 
                                        VerticalAlignment="Center" 
                                        Margin="9,0,0,0">
                                <Ellipse.Fill>
                                    <ImageBrush ImageSource="{Binding ImageSource}" Stretch="Fill"/>
                                </Ellipse.Fill>
                            </Ellipse>
                            <Grid Grid.Column="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid Grid.Row="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="2*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" 
                                       VerticalAlignment="Top"
                                       Margin="12,9,0,0" 
                                       FontSize="13.5" Text="{Binding Name}" Foreground="#F5F5F5"
                                       TextTrimming="CharacterEllipsis"/>
                                    <TextBlock Grid.Column="1"
                                           VerticalAlignment="Top" HorizontalAlignment="Right"
                                           Margin="12,9,12,0"
                                           FontSize="13.5" Text="{Binding DateTimeLastMessageDate}" Foreground="#8696A8"/>
                                </Grid>
                                <Grid Grid.Row="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="2*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" 
                                       VerticalAlignment="Top"
                                       Margin="12,0,0,2" 
                                       FontSize="13.5" Text="{Binding LastMessage.MessageText}" Foreground="#7F91A4"
                                       TextTrimming="CharacterEllipsis"/>
                                </Grid>
                            </Grid>
                        </Grid>
                        <wpf:Ripple x:Name="RippleEffect" Padding="{TemplateBinding Padding}" Panel.ZIndex="1"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        Focusable="False"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <wpf:Ripple.Clip>
                                <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                    <Binding ElementName="border" Path="ActualWidth" />
                                    <Binding ElementName="border" Path="ActualHeight" />
                                    <Binding ElementName="border" Path="CornerRadius" />
                                    <Binding ElementName="border" Path="BorderThickness" />
                                </MultiBinding>
                            </wpf:Ripple.Clip>
                        </wpf:Ripple>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#2B5278"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ListViewItem}" x:Key="ChatItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <StackPanel Orientation="Horizontal">
                        <Border x:Name="border" CornerRadius="5,15,15,5" MinHeight="33" MinWidth="98" MaxWidth="430" 
                                Background="#182533" Margin="56,2,0,0">
                            <StackPanel Orientation="Vertical">
                                <TextBox Background="Transparent"
                                         Foreground="#E4ECF2"
                                         BorderThickness="0"
                                         Text="{Binding MessageText}"
                                         IsReadOnly="True"
                                         TextWrapping="Wrap"
                                         FontSize="13.5"/>
                                <TextBlock VerticalAlignment="Top" HorizontalAlignment="Right"
                                           Margin="0,0,8,3"
                                           FontSize="12.5" Text="{Binding TimeHours}" Foreground="#8696A8"/>
                            </StackPanel>
                        </Border>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding YourMessage}" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#2B5278"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding UserFirstMessage}" Value="True">
                            <Setter TargetName="border" Property="Margin" Value="56,8,0,0"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Resources>
            <ControlTemplate x:Key="OrdinaryChat_First">
                <StackPanel Orientation="Horizontal">
                    <Border x:Name="border" CornerRadius="15,15,15,5" MinHeight="33" MinWidth="98" MaxWidth="430" 
                            Background="#182533" Margin="56,2,0,0">
                        <StackPanel Orientation="Vertical">
                            <TextBox Background="Transparent"
                                         Foreground="#E4ECF2"
                                         BorderThickness="0"
                                         Text="{Binding MessageText}"
                                         IsReadOnly="True"
                                         TextWrapping="Wrap"
                                         FontSize="13.5"/>
                            <TextBlock VerticalAlignment="Top" HorizontalAlignment="Right"
                                           Margin="0,0,8,3"
                                           FontSize="12.5" Text="{Binding TimeHours}" Foreground="#8696A8"/>
                        </StackPanel>
                    </Border>
                </StackPanel>
                <ControlTemplate.Triggers>
                    <DataTrigger Binding="{Binding YourMessage}" Value="True">
                        <Setter TargetName="border" Property="Background" Value="#2B5278"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding UserFirstMessage}" Value="True">
                        <Setter TargetName="border" Property="Margin" Value="56,8,0,0"/>
                    </DataTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="OrdinaryChat_Last">
                <StackPanel Orientation="Horizontal">
                    <Ellipse
                            Width="33"
                            Height="33"
                            Margin="13,0,0,0"
                            VerticalAlignment="Bottom">
                        <Ellipse.Fill>
                            <ImageBrush ImageSource="{Binding ImageSource}"/>
                        </Ellipse.Fill>
                    </Ellipse>
                    <Path x:Name="path" Fill="#182533" Stroke="#182533" StrokeThickness="3" Margin="6,0,0,0"
                          Data="M 0,180 A 200,120 60 0 0 30,150 L 30,180 Z" 
                          HorizontalAlignment="Center" Height="7.2" Width="6" Stretch="Fill" VerticalAlignment="Bottom" />
                    <Border x:Name="border" CornerRadius="5,15,15,0" MinHeight="33" MinWidth="98" MaxWidth="430" 
                            Background="#182533" Margin="-2,2,0,0">
                        <StackPanel Orientation="Vertical">
                            <TextBox Background="Transparent"
                                         Foreground="#E4ECF2"
                                         BorderThickness="0"
                                         Text="{Binding MessageText}"
                                         IsReadOnly="True"
                                         TextWrapping="Wrap"
                                         FontSize="13.5"/>
                            <TextBlock VerticalAlignment="Top" HorizontalAlignment="Right"
                                           Margin="0,0,8,3"
                                           FontSize="12.5" Text="{Binding TimeHours}" Foreground="#8696A8"/>
                        </StackPanel>
                    </Border>
                </StackPanel>
                <ControlTemplate.Triggers>
                    <DataTrigger Binding="{Binding YourMessage}" Value="True">
                        <Setter TargetName="border" Property="Background" Value="#2B5278"/>
                        <Setter TargetName="path" Property="Fill" Value="#2B5278"/>
                        <Setter TargetName="path" Property="Stroke" Value="#2B5278"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding UserFirstMessage}" Value="True">
                        <Setter TargetName="border" Property="Margin" Value="-2,8,0,0"/>
                    </DataTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="GroupChat_FirstNotLast">
                <StackPanel Orientation="Horizontal">
                    <Border x:Name="border" CornerRadius="15,15,15,5" MinHeight="33" MinWidth="98" MaxWidth="430" 
                            Background="#182533" Margin="56,2,0,0">
                        <StackPanel Orientation="Vertical">
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Left"
                                       Margin="14,6,0,0"
                                       Text="{Binding Username}"
                                       Foreground="{Binding Color}"
                                       FontSize="13.5"/>
                            <TextBox Background="Transparent"
                                     Foreground="#E4ECF2"
                                     BorderThickness="0"
                                     Text="{Binding MessageText}"
                                     IsReadOnly="True"
                                     TextWrapping="Wrap"
                                     FontSize="13.5"
                                     Margin="0,-6,0,0"/>
                            <TextBlock VerticalAlignment="Top" HorizontalAlignment="Right"
                                       Margin="0,0,8,3"
                                       FontSize="12.5" Text="{Binding TimeHours}" Foreground="#8696A8"/>
                        </StackPanel>
                    </Border>
                </StackPanel>
                <ControlTemplate.Triggers>
                    <DataTrigger Binding="{Binding UserFirstMessage}" Value="True">
                        <Setter TargetName="border" Property="Margin" Value="56,8,0,0"/>
                    </DataTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="GroupChat_FirstLast">
                <StackPanel Orientation="Horizontal">
                    <Ellipse
                            Width="33"
                            Height="33"
                            Margin="13,0,0,0"
                            VerticalAlignment="Bottom">
                        <Ellipse.Fill>
                            <ImageBrush ImageSource="{Binding ImageSource}"/>
                        </Ellipse.Fill>
                    </Ellipse>
                    <Path x:Name="path" Fill="#182533" Stroke="#182533" StrokeThickness="3" Margin="6,0,0,0"
                          Data="M 0,180 A 200,120 60 0 0 30,150 L 30,180 Z" 
                          HorizontalAlignment="Center" Height="7.2" Width="6" Stretch="Fill" VerticalAlignment="Bottom" />
                    <Border x:Name="border" CornerRadius="5,15,15,0" MinHeight="33" MinWidth="98" MaxWidth="430" 
                            Background="#182533" Margin="-2,2,0,0">
                        <StackPanel Orientation="Vertical">
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Left"
                                       Margin="14,6,0,0"
                                       Text="{Binding Username}"
                                       Foreground="{Binding Color}"
                                       FontSize="13.5"/>
                            <TextBox Background="Transparent"
                                         Foreground="#E4ECF2"
                                         BorderThickness="0"
                                         Text="{Binding MessageText}"
                                         IsReadOnly="True"
                                         TextWrapping="Wrap"
                                         FontSize="13.5"
                                         Margin="0,-6,0,0"/>
                            <TextBlock VerticalAlignment="Top" HorizontalAlignment="Right"
                                           Margin="0,0,8,3"
                                           FontSize="12.5" Text="{Binding TimeHours}" Foreground="#8696A8"/>
                        </StackPanel>
                    </Border>
                </StackPanel>
                <ControlTemplate.Triggers>
                    <DataTrigger Binding="{Binding UserFirstMessage}" Value="True">
                        <Setter TargetName="border" Property="Margin" Value="-2,8,0,0"/>
                    </DataTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Style.Resources>
        
        <!-- Not yours Group -->
        
        <Style.Triggers>
            <MultiDataTrigger> <!-- Not yours Group First Not Last -->
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding YourMessage}" Value="False"/>
                    <Condition Binding="{Binding IsLastMessage}" Value="False"/>
                    <Condition Binding="{Binding FirstMessage}" Value="True"/>
                    <Condition Binding="{Binding IsGroupMessage}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Template" Value="{StaticResource GroupChat_FirstNotLast}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger> <!-- Not yours Group First Last -->
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding YourMessage}" Value="False"/>
                    <Condition Binding="{Binding IsLastMessage}" Value="True"/>
                    <Condition Binding="{Binding FirstMessage}" Value="True"/>
                    <Condition Binding="{Binding IsGroupMessage}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Template" Value="{StaticResource GroupChat_FirstLast}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger> <!-- Not yours Group Not First Last -->
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding YourMessage}" Value="False"/>
                    <Condition Binding="{Binding IsLastMessage}" Value="True"/>
                    <Condition Binding="{Binding FirstMessage}" Value="False"/>
                    <Condition Binding="{Binding IsGroupMessage}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Template" Value="{StaticResource OrdinaryChat_Last}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            
            <!-- Yours Group -->
            
            <MultiDataTrigger>
                <!-- Yours Group First Not Last -->
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding YourMessage}" Value="True"/>
                    <Condition Binding="{Binding IsLastMessage}" Value="False"/>
                    <Condition Binding="{Binding FirstMessage}" Value="True"/>
                    <Condition Binding="{Binding IsGroupMessage}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Template" Value="{StaticResource OrdinaryChat_First}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <!-- Yours Group First Last -->
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding YourMessage}" Value="True"/>
                    <Condition Binding="{Binding IsLastMessage}" Value="True"/>
                    <Condition Binding="{Binding FirstMessage}" Value="True"/>
                    <Condition Binding="{Binding IsGroupMessage}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Template" Value="{StaticResource OrdinaryChat_Last}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <!-- Yours Group Not First Last -->
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding YourMessage}" Value="True"/>
                    <Condition Binding="{Binding IsLastMessage}" Value="True"/>
                    <Condition Binding="{Binding FirstMessage}" Value="False"/>
                    <Condition Binding="{Binding IsGroupMessage}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Template" Value="{StaticResource OrdinaryChat_Last}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            
            <!-- Not Group -->
            
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsLastMessage}" Value="False"/>
                    <Condition Binding="{Binding FirstMessage}" Value="True"/>
                    <Condition Binding="{Binding IsGroupMessage}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Template" Value="{StaticResource OrdinaryChat_First}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsLastMessage}" Value="True"/>
                    <Condition Binding="{Binding FirstMessage}" Value="True"/>
                    <Condition Binding="{Binding IsGroupMessage}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Template" Value="{StaticResource OrdinaryChat_First}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsLastMessage}" Value="True"/>
                    <Condition Binding="{Binding IsGroupMessage}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Template" Value="{StaticResource OrdinaryChat_Last}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <!--<DataTrigger Binding="{Binding IsGroupMessage}" Value="True">
                <Setter Property="Template" Value="{StaticResource GroupChat}"/>
            </DataTrigger>-->
        </Style.Triggers>
        
    </Style>
    

    <Style TargetType="{x:Type Button}" x:Key="AttachFileButton">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="wpf:RippleAssist.Feedback" Value="#47526B"/>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="Pictures/input_attach.png"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border IsHitTestVisible="False" 
                                Panel.ZIndex="2" 
                                x:Name="border" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="20"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="contentPresenter"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <wpf:Ripple Padding="{TemplateBinding Padding}" Panel.ZIndex="1"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        Content="{TemplateBinding Content}"
                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        Focusable="False"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <wpf:Ripple.Clip>
                                <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                    <Binding ElementName="border" Path="ActualWidth" />
                                    <Binding ElementName="border" Path="ActualHeight" />
                                    <Binding ElementName="border" Path="CornerRadius" />
                                    <Binding ElementName="border" Path="BorderThickness" />
                                </MultiBinding>
                            </wpf:Ripple.Clip>
                        </wpf:Ripple>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Pictures/input_attach_over.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="Pictures/input_attach_captured.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="InputSendButton">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Command" Value="{Binding SendCommand}"/>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="Pictures/input_send.png"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="border" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="20"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="contentPresenter"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type TextBox}" x:Key="WriteMessageStyle">
        <Setter Property="Text" Value="{Binding Message, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        <Setter Property="MaxLength" Value="4096"/>
        <Setter Property="Cursor" Value="IBeam"/>
        <Setter Property="AcceptsReturn" Value="False"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Margin" Value="-3,11,11,11"/>
        <Setter Property="Padding" Value="0,7,0,7"/>
        <Setter Property="Foreground" Value="#F5F5F5"/>
        <Setter Property="CaretBrush" Value="White"/>
        <Setter Property="FontFamily" Value="Fonts/OpenSans/#Open Sans"/>
        <Setter Property="FontSize" Value="12.5"/>
        <Setter Property="Tag" Value="Write a message..."/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid Height="Auto">
                        <Border x:Name="border" BorderThickness="0" Background="#17212B"/>
                        <ScrollViewer Name="PART_ContentHost" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="6,0,0,0">
                            <ScrollViewer.InputBindings>
                                <KeyBinding Command="{Binding SendCommand}" Key="Return"/>
                            </ScrollViewer.InputBindings>
                        </ScrollViewer>
                        <TextBlock x:Name="Hint" Text="{TemplateBinding Tag}" FontFamily="Fonts/OpenSans/#Open Sans" Foreground="#6D7883" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="9,0,0,0" Visibility="Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="Hint" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CreateNewGroupButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignIconForegroundButtonMine}">
        <Setter Property="Content" Value="New Group"/>
        <Setter Property="Foreground" Value="#E9E8E8"/>
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="wpf:RippleAssist.Feedback" Value="#283741"/>
        <Setter Property="wpf:RippleAssist.RippleOnTop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border"
                                Background="Transparent"
                                BorderThickness="0">
                            
                        </Border>
                        <Grid Panel.ZIndex="1">
                            <WrapPanel VerticalAlignment="Center">
                                <Border Background="#56B3F5" CornerRadius="5" Margin="21,8,12,8" Height="24" Width="24">
                                    <wpf:PackIcon x:Name="IconLogOut" Kind="AccountMultiple" Height="18" Width="18" FontWeight="Regular" 
                                              Foreground="#FFFFFF" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                                <ContentPresenter x:Name="contentPresenter" Panel.ZIndex="1"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </WrapPanel>
                        </Grid>
                        <wpf:Ripple x:Name="RippleEffect" Padding="{TemplateBinding Padding}"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        Focusable="False"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <wpf:Ripple.Clip>
                                <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                    <Binding ElementName="border" Path="ActualWidth" />
                                    <Binding ElementName="border" Path="ActualHeight" />
                                    <Binding ElementName="border" Path="CornerRadius" />
                                    <Binding ElementName="border" Path="BorderThickness" />
                                </MultiBinding>
                            </wpf:Ripple.Clip>
                        </wpf:Ripple>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#232E3C"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LogOutButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignIconForegroundButtonMine}">
        <Setter Property="Content" Value="Log out"/>
        <Setter Property="Foreground" Value="Red"/>
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border"
                                Background="Transparent"
                                BorderThickness="0">
                            <WrapPanel VerticalAlignment="Center">
                                <wpf:PackIcon x:Name="IconLogOut" Kind="LogoutVariant"  Margin="21,8,12,8" Height="24" Width="24" FontWeight="Regular" Foreground="Red"/>
                                <ContentPresenter x:Name="contentPresenter"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </WrapPanel>
                        </Border>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#232E3C"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- SrollViewer ScrollBar Repeat Buttons (The part in the middle, 
             not the thumb the long area between the buttons ) -->
    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- ScrollBar Thumb, that part that can be dragged
            up/down or left/right Buttons -->
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border
          CornerRadius="2"
          Background="{TemplateBinding Background}"
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar"
            TargetType="{x:Type ScrollBar}">
        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition Height="0.00001*"/>
            </Grid.RowDefinitions>
            <Border
                    Grid.RowSpan="3"
                    CornerRadius="2"
                    Background="#2E343C" />
            <!--<RepeatButton
                       Grid.Row="0"
                       Style="{StaticResource ScrollBarLineButton}"
                       Height="18"
                       Command="ScrollBar.LineUpCommand"
                       Content="M 0 4 L 8 4 L 4 0 Z" />-->
            <Track
                Name="PART_Track"
                Grid.Row="1"
                IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton
                            Style="{StaticResource ScrollBarPageButton}"
                            Command="ScrollBar.PageUpCommand" />
                        </Track.DecreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb
                                Style="{StaticResource ScrollBarThumb}"
                                Background="#4F555C"
                                BorderBrush="#4F555C" />
                        </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton
                            Style="{StaticResource ScrollBarPageButton}"
                            Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
            </Track>
            <!--<RepeatButton
                Grid.Row="3"
                Style="{StaticResource ScrollBarLineButton}"
                Height="18"
                Command="ScrollBar.LineDownCommand"
                Content="M 0 0 L 4 4 L 8 0 Z"/>-->
        </Grid>
    </ControlTemplate>
    <!-- HorizontalScrollBar Template using the previously created Templates -->
    <ControlTemplate x:Key="HorizontalScrollBar"
            TargetType="{x:Type ScrollBar}">
        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition Height="0.00001*"/>
            </Grid.RowDefinitions>
            <Border
                    Grid.RowSpan="3"
                    CornerRadius="2"
                    Background="#2E343C" />
            <!--<RepeatButton
                       Grid.Row="0"
                       Style="{StaticResource ScrollBarLineButton}"
                       Height="18"
                       Command="ScrollBar.LineUpCommand"
                       Content="M 0 4 L 8 4 L 4 0 Z" />-->
            <Track
                Name="PART_Track"
                Grid.Row="1"
                IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton
                            Style="{StaticResource ScrollBarPageButton}"
                            Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb
                                Style="{StaticResource ScrollBarThumb}"
                                Background="#4F555C"
                                BorderBrush="#4F555C" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton
                            Style="{StaticResource ScrollBarPageButton}"
                            Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <!--<RepeatButton
                Grid.Row="3"
                Style="{StaticResource ScrollBarLineButton}"
                Height="18"
                Command="ScrollBar.LineDownCommand"
                Content="M 0 0 L 4 4 L 8 0 Z"/>-->
        </Grid>
    </ControlTemplate>
    <!-- Style for overall  ScrollBar -->
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="6" />
                <Setter Property="Margin" Value="10,0,10,0"/>
                <Setter Property="Template"
                        Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="6"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Margin" Value="0,10,0,10"/>
                <Setter Property="Template"
                        Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
</ResourceDictionary>